$(function(){
	/** Ajax 이벤트 시작 **/
	$('.ajax-loading').ajaxStart(function(){
		$('.ajax-loading').show();
	});
	$('.ajax-loading').ajaxStop(function(){
		setTimeout(function(){jQuery.fn.delay($('.ajax-loading').hide(),500); } , 300);
	});
	$('.ajax-loading').ajaxError(function(){
		$('.ajax-loading').hide();
	});
	/** Ajax 이벤트 종료 **/
});

/**
 * 숫자 체크
 * @param obj
 */
function fnInputNumCom(el){
	if(el.val() != ""){
		if (!(/^[0-9]+$/).test(el.val())) {
			alert("숫자만 입력하세요.");
			el.val("");
			el.focus();
			return false;
		}else{
			return true;
		}
	}
}

/**
 * 숫자 3자리 마다 콤마 찍기
 * @param num
 * @returns {*}
 */
function fnNumberMoneyType(n){
	var reg = /(^[+-]?\d+)(\d{3})/;   // 정규식
	n += '';                          // 숫자를 문자열로 변환

	while (reg.test(n))
		n = n.replace(reg, '$1' + ',' + '$2');

	return n;
}

/**
 * 문자 공백 제거
 * @param str
 * @returns {*}
 */
function trim(str){
	var temp=str.replace(/(^\s*)|(\s*$)/gi, "");
	return temp;
}

/**
 * Json Type Ajax Function
 *
 * @param url
 * @param data
 * @param successFn
 */
function fn_ajax_json(url, data, successFn, errorFn){
	if(errorFn == null){
		errorFn=function(xhr, status, error){
			alert("일시적인 오류가 발생되었습니다.\n현재 페이지를 새로고침 합니다.");
			location.reload(true);
			return false;
		};
	}

	$.ajax({
		type: 'post',
		cache: false,
		url: url,
		data: data,
		dataType: 'json',
		success: successFn,
		error: errorFn
	});
}

function fn_ajax_text(url, data, successFn, errorFn){
	if(errorFn == null){
		errorFn=function(xhr, status, error){
			alert("일시적인 오류가 발생되었습니다.\n현재 페이지를 새로고침 합니다.");
			location.reload(true);
			return false;
		};
	}

	$.ajax({
		type: 'post',
		cache: false,
		url: url,
		data: data,
		dataType: 'text',
		success: successFn,
		error: errorFn
	});
}

function fn_ajax_jsonp(url, data, successFn, errorFn){
	if(errorFn == null){
		errorFn=function(xhr, status, error){
			alert("일시적인 오류가 발생되었습니다.\n현재 페이지를 새로고침 합니다.");
			location.reload(true);
			return false;
		};
	}

	$.ajax({
		type: 'post',
		cache: false,
		url: url,
		data: data,
		dataType: 'jsonp',
		jsonp: 'callback',
		success: successFn,
		error: errorFn
	});
}

function fn_ajax_xml(url, data, successFn, errorFn){
	if(errorFn == null){
		errorFn=function(xhr, status, error){
			alert("일시적인 오류가 발생되었습니다.\n현재 페이지를 새로고침 합니다.");
			location.reload(true);
			return false;
		};
	}

	$.ajax({
		type: 'get',
		cache: false,
		url: url,
		data: data,
		dataType: 'xml',
		success: successFn,
		error: errorFn
	});
}


/**
 * 공통 로그인 체크 및 인터셉터 Ajax
 * @param el
 * @param pageMenuCd
 */
function ajaxCommonInterceptor(el, prevUrl, menucd){
	if( !menucd && location.href.indexOf("kor") > -1) menucd=138;
	var action= el.attr("href");
	var data=new Array();
	data={prevUrl : prevUrl};
	var successFn=function(json){
		if(json.rs == 1){
			alert("본인확인이 필요한 서비스 입니다.");
			location.href="certification.do?menuIdx=" + menucd;
		}
	};
	fn_ajax_json(action, data, successFn, null)
}

/**
 * 현재 주소 경로 리턴
 */
function fnCurrPathReturn(){
	var site=null;
	if(location.href.indexOf("kor") > -1){
		site="kor";
	}else if(location.href.indexOf("cyber") > -1){
		site="cyber";
	}else if(location.href.indexOf("office") > 1){
		site="office";
	}
}

/**
 * 소수점 자르기
 * @param n
 * @param digits
 * @returns {Number}
 */
function roundXL(n, digits){
	if(digits >= 0)
		return parseFloat(n.toFixed(digits)); // 소수부 반올림
	digits=Math.pow(10, digits); // 정수부 반올림
	var t=Math.round(n * digits) / digits;
	return parseFloat(t.toFixed(0));
}


/**
 * 숫자 유효성 체크
 * @param El
 * @returns {boolean}
 */
function fnNumberCheck(El) {
	var regExp=/^[0-9]+$/;
	if(El.val() == ''){
		alert(El.attr('title') + "을 입력해 주세요.");
		El.focus();
		return false;
	}else if(!regExp.test(El.val())){
		alert("숫자만 입력해 주세요.");
		El.val("");
		El.focus();
		return false;
	}else{
		return true;
	}
}

/**
 * 날짜형식 유효성 체크
 * @param dateEl
 * @returns {boolean}
 */
function fnDateCheck(dateEl) {
	var dateVal = dateEl.val();
	var regExp = /^(19|20)\d{2}[/](0[1-9]|1[012])[/](0[1-9]|[12][0-9]|3[0-1])$/;
	if(dateVal != ''){
		if(!regExp.test(dateVal)) {
			alert("날짜 형식이 올바르지 않습니다.\nYYYY/MM/DD 형식으로 입력해 주세요.");
			dateEl.focus();
			return false;
		}else{
			var date_arr = dateVal.split("/");
			var year = date_arr[0];
			var month = date_arr[1];
			var day = date_arr[2];
			var month_last_day = (new Date(year, month, 0)).getDate();
			if(month_last_day < day){
				alert(year + "년 " + month + "월의 마지막 일자는 " + month_last_day + "일 입니다.\n정확한 " + dateEl.attr('title') + "을 입력해 주세요.");
				dateEl.focus();
				return false;
			}else{
				return true;
			}
		}
	}else{
		alert(dateEl.attr('title') + "을 입력해 주세요.");
		dateEl.focus();
		return false;
	}
}

/**
 * 날짜 기간별 일자 계산
 * @param dateEl
 * @returns {boolean}
 */
function fnDaysRange(date_1, date_2){
	// 년도, 월, 일로 분리
	var as_DT1 = date_1.split("/");
	var as_DT2   = date_2.split("/");
	// Number()를 이용하여 월을 2자리로 포맷
	as_DT1[1] = (Number(as_DT1[1]) - 1) + "";
	as_DT2[1] = (Number(as_DT2[1]) - 1) + "";
	var s_DT = new Date(as_DT1[0], as_DT1[1], as_DT1[2]);
	var e_DT   = new Date(as_DT2[0], as_DT2[1], as_DT2[2]);
	return (e_DT.getTime() - s_DT.getTime()) / 1000 / 60 / 60 / 24;
}

/**
 * 원단위 절사
 * @param dateEl
 * @returns {boolean}
 */
function fnSlWon(minab) {
	var ma = minab + "";
	var mina = ma;
	if (ma.indexOf(".") != -1){
		mina = ma.substring(0, ma.indexOf(".")-1) + "0";
	}
	return mina;
}

/**
 * 콘텐츠 만족도 목록 조회 Ajax
 */
function fnAjaxSatisfyList(el, pageMenuCd){
	$('.satisfy_btn_open').hide();
	$('.satisfy_btn_close').show();
	var url=el.attr("href");
	var data=new Array();
	data={menucd: pageMenuCd};
	var successFn=function(text){
		$('.satisfaction_view').html(text);
		$('.satisfaction_view').show();
	};
	fn_ajax_text(url, data, successFn, null)
}


/**
 * 콘텐츠 만족도 목록 조회 Ajax
 */
function fnAjaxTabMenuSatisfyList(el, pageMenuCd){
	$('.satisfy_btn_open_'+pageMenuCd).hide();
	$('.satisfy_btn_close_'+pageMenuCd).show();
	var url=el.attr("href");
	var data=new Array();
	data={menucd: pageMenuCd};
	var successFn=function(text){
		$('.satisfaction_view_'+pageMenuCd).html(text);
		$('.satisfaction_view_'+pageMenuCd).show();
	};
	fn_ajax_text(url, data, successFn, null)
}

/**
 * 콘텐츠 만족도 등록 Ajax
 */
function fnAjaxSatisfyInsert(el, pageMenuCd){
	var point=$('input[name=satisfy_point]:checked');
	var contents=$('input[name=satisfy_contents]');
	if(contents.val() == ""){
		alert("의견 내용이 없습니다.\n의견 내용을 작성해주세요.");
		contents.focus();
		return;
	}else{
		var url=el.attr("href");
		var data=new Array();
		data={menucd: pageMenuCd, point: point.val(), contents: contents.val()};
		var successFn=function(json){
			if(json.rs != "fail"){
				alert("귀하의 평가가 등록되었습니다.");
				contents.val("");
				$('input[name=satisfy_point]').eq(0).prop('checked',true);
				$('.satisfaction_view_btn').find('a').click();
			}
		};
		fn_ajax_json(url, data, successFn, null)
	}
}

/**
 * 콘텐츠 만족도 등록 Ajax
 */
function fnAjaxTabMenuSatisfyInsert(el, pageMenuCd){
	var point=$('input[name=satisfy_point_'+pageMenuCd+']:checked');
	var contents=$('textarea[name=satisfy_contents_'+pageMenuCd+']');
	if(contents.val() == ""){
		alert("의견 내용이 없습니다.\n의견 내용을 작성해주세요.");
		contents.focus();
		return;
	}else{
		var url=el.attr("href");
		var data=new Array();
		data={menucd: pageMenuCd, point: point.val(), contents: contents.val()};
		var successFn=function(json){
			if(json.rs != "fail"){
				alert("의견이 작성 되었습니다.");
				contents.val("");
				$('input[name=satisfy_point_'+pageMenuCd+']').eq(0).prop('checked',true);
				$('.satisfaction_view_btn').find('a').click();
			}
		};
		fn_ajax_json(url, data, successFn, null)
	}
}


/**
 * 콘텐츠 만족도 목록 조회 페이징 Ajax
 * @param pageNo
 */
function fnAjaxSatisfyPageMove(pageNo){
	var url="/ajaxSatisfyList.do";
	var data=new Array();
	data={pageindex: pageNo, menucd:$('#satisfy_menucd').val()};
	var successFn=function(text){
		$('.satisfaction_view').html(text);
		$('.satisfaction_view').show();
	};
	fn_ajax_text(url, data, successFn, null)
}


/**
 * 페이지 프린트
 */
function fnPagePrint(el){
	var rv = -1; // Return value assumes failure.
	if (navigator.appName == 'Microsoft Internet Explorer') {
		var ua = navigator.userAgent;
		var re = new RegExp("MSIE ([0-9]{1,}[\.0-9]{0,})");
		if (re.exec(ua) != null)
			rv = parseFloat(RegExp.$1);
		if(rv <= 8){
			window.open($(el).attr("href"), 'PrintPoup', 'top=0, left=0, status=0, width=800, height=500, scrollbars=yes')
		}else{
			window.print();
		}
	}else{
		window.print();
	}
}


/** 쿠키 **/
function getCookie(names){
	var nameOfCookie = names + "=";
	var x = 0;
	while ( x <= document.cookie.length ){
		var y = (x+nameOfCookie.length);
		if(document.cookie.substring( x, y ) == nameOfCookie){
			if((endOfCookie=document.cookie.indexOf( ";", y )) == -1)
				endOfCookie = document.cookie.length;
			return unescape( document.cookie.substring( y, endOfCookie ) );
		}
		x = document.cookie.indexOf( " ", x ) + 1;
		if ( x == 0 )
			break;
	}
	return "";
}

/*** 메인팝업 ***/
function use_popup(data) {
	var url = "popupView.do?popup_idx="+data.pidx;
	var name = "popup_"+data.pidx;
	var width = data.pwidth;
	var height = data.pheight;

	if (width != "515") {
		height = Number(height) + 30;
	}

	var top = data.ptop;
	var left = data.pleft;
	var scroll = data.pscr;

	if (getCookie(name) != "done") {
		window.open(url, "" + name + "", "toolbar=no,location=no,directories=no,status=no,menubar=no,resizable=no,width=" + width + ",height=" + height + ",top=" + top + ",left=" + left + ",scrollbars=" + scroll + "");
	}
}